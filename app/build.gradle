buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'io.fabric'

def cfg = rootProject.ext.configuration
def libs = rootProject.ext.libraries

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    signingConfigs {
        config {}
    }

    compileSdkVersion cfg.compileSdkVersion
    buildToolsVersion cfg.buildToolsVersion

    defaultConfig {
        applicationId 'org.eyeseetea.malariacare'
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName
        multiDexEnabled true
        dexOptions {
            javaMaxHeapSize "6g"
        }
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.config
        useLibrary  'org.apache.http.legacy'
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
        }
    }
    //TODO This config is related to a known issue: http://stackoverflow.com/questions/20827885/android-studio-0-4-duplicate-files-copied-in-apk-meta-inf-license-txt
    packagingOptions {
        exclude 'LICENSE.txt'
        //FIXME: This has been automatically suggested by AndroidStudio while sdk integration
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    productFlavors {
        eds {
            applicationId "org.eyeseetea.malariacare.eds_bb"
            versionName "2.0.5"
            buildConfigField "boolean", "translations", "false"
            buildConfigField "String", "defaultLocale", "\"en\""
            resValue "string", "authority", applicationId+versionName+"_DHIS2_DEFAULT_AUTHORITY"
        }
        hnqis {
            applicationId "org.eyeseetea.malariacare.hnqis_ng_bb"
            versionName "1.3.0"
            buildConfigField "boolean", "translations", "true"
            buildConfigField "String", "defaultLocale", "\"en\""
            resValue "string", "authority", applicationId+versionName+"_DHIS2_DEFAULT_AUTHORITY"
        }
        eyeseetea {
            applicationId "org.eyeseetea.malariacare.questmark_bb"
            versionName "0.1.0"
            buildConfigField "boolean", "translations", "true"
            buildConfigField "String", "defaultLocale", "\"en\""
            resValue "string", "authority", applicationId+versionName+"_DHIS2_DEFAULT_AUTHORITY"
        }
    }


    lintOptions {
        disable 'RtlSymmetry', 'RtlHardcoded'
        checkReleaseBuilds false
    }
    apt {
        arguments {
            targetModuleName 'EyeSeeTea'
        }
    }
}

configurations {
    all*.exclude group: 'com.google.guava', module:'guava-jdk5'
}

dependencies {
    // SDK submodules
    compile project(":core-rules")
    compile project(":ui-bindings")
    compile project(":EyeSeeTea-sdk")

    // App dependencies
    compile fileTree(include: ['*.jar'], dir: 'libs')

    apply plugin: 'android-apt'
    apply plugin: 'com.github.dcendents.android-maven'

    //Android support
    compile "com.android.support:support-v4:${libs.supportVersion}"
    compile "com.android.support:appcompat-v7:${libs.supportVersion}"
    compile "com.android.support:support-annotations:${libs.supportVersion}"
    compile "com.android.support:multidex:${libs.multidex}"
    //3rd party dependencies
    compile "com.opencsv:opencsv:${libs.opencsvVersion}"
    compile "com.google.android.gms:play-services:${libs.gmsPlayVersion}"
    compile "com.google.guava:guava:${libs.guavaVersion}"
    compile "com.squareup.okhttp:okhttp:$rootProject.okhttpVersion"
    compile "com.googlecode.libphonenumber:libphonenumber:${libs.libphonenumberVersion}"
    compile "com.github.PhilJay:MPAndroidChart:v${libs.MPAndroidChartVersion}"

    //Drive dependencies
    compile "com.google.android.gms:play-services-identity:${libs.gmsPlayVersion}"
    compile("com.google.api-client:google-api-client-android:${libs.googleApiClientAndroidVersion}") {
        exclude group: 'org.apache.httpcomponents'
        exclude group: 'com.google.code.findbugs'
    }
    compile("com.google.apis:google-api-services-drive:${libs.googleApiServicesDriveVersion}") {
        exclude group: 'org.apache.httpcomponents'
    }

    compile "com.google.code.findbugs:jsr305:${libs.jsr305Version}"

    // Unit testing dependencies
    testCompile "junit:junit:${libs.jUnitVersion}"
    testCompile "org.mockito:mockito-core:${libs.mockitoVersion}"

    // Instrumented tests dependencies
    // Android Testing Support Library's runner and rules
    
    androidTestCompile "com.android.support.test:runner:${libs.runnerVersion}"
    androidTestCompile "com.android.support.test:rules:${libs.runnerVersion}"

    // Espresso UI Testing dependencies.
    androidTestCompile "com.android.support.test.espresso:espresso-core:${libs.espressoVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:${libs.espressoVersion}"
    // Espresso-idling-resource for synchronization with background jobs
    androidTestCompile "com.android.support.test.espresso:espresso-idling-resource:${libs.espressoVersion}"
    // Espresso-web for WebView support
    androidTestCompile "com.android.support.test.espresso:espresso-web:${libs.espressoVersion}"

    //Tracking crashes
    compile("com.crashlytics.sdk.android:crashlytics:${libs.crashlyticsVersion}") {
        transitive = true;
    }

    // JavaPoet (sucessor to JavaWriter)
    compile "com.squareup:javapoet:${libs.javapoetVersion}"

    //DBFlow
    apt "com.github.Raizlabs.DBFlow:dbflow-processor:${libs.dbFlowVersion}"
    compile "com.github.Raizlabs.DBFlow:dbflow:${libs.dbFlowVersion}"
    compile "com.github.Raizlabs.DBFlow:dbflow-core:${libs.dbFlowVersion}"
    compile "com.github.Raizlabs.DBFlow:dbflow-sqlcipher:${libs.dbFlowVersion}"
}



